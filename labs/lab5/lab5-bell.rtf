{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Brian Bell\
brianb@mit.edu\
6.885 Lab 5\
\
1. List the top TF-IDF terms for Enron's key people\
\
Jeff Skilling's top terms\
\{"high": [[277.85465223724356, "skilling"], [315.35194645432244, "enron"], [329.68374233796209, "please"], [357.56593193759096, "sherri"], [913.81202937676005, "jeff"]], "author": "jeff.skilling@enron.com"\}\
\
Ken Lay's top terms\
\{"high": [[52.539574024493454, "approval"], [69.697709879765327, "transaction"], [105.24472935056961, "vagner"], [157.86709402585441, "asep"], [218.70016827905806, "petrobras"]], "author": "andrew.fastow@enron.com"\}	\
\
Andrew Fastow's top terms\
\{"high": [[176.11970155272616, "company"], [186.74588901026718, "enron's"], [206.87223700079727, "kenneth"], [269.10032764102181, "enron"], [450.09289354484832, "program"]], "author": "kenneth.lay@enron.com"\}\
\
2. How did you compute TF-IDF for the whole corpus? What was easy and what was hard?\
\
I performed two map-reduce steps to compute TF-IDF for the whole corpus. In the first step we map out author/term pairs and 1 and then reduce to obtain the number of times each author used a given term, for all terms. Then I performed a second map-reduce operation, this time mapping over a given term and an (author/total count) pair. Then it was possible to reduce and compute TF-IDF for every term for every sender. A third map reduce mapped out author and all the TF-IDF scores for that author and in the reduce operation I narrowed down the output to obtain only the top scores for Ken Lay et al. The first map reduce to get the term counts was just like the example given in mr_wordcount.py, but the second map reduce was harder to get my head around. It took me a while to figure out how to link the map and reduce to compute the tf-idf scores.\
\
3. Sketch a description of how you would use EMR to run page rank on this graph. \
\
To run page rank we would first map-reduce to find the count of emails to each person organized by the outbound person ( yield outbound, \{inbound, count\}). Then we could map again to calculate the weight of each of these emails based upon how many there are from that person, and then reduce to organize them by inbound person this time. Finally we would map-reduce to calculate the score for each person based upon the inbound links.}